wordleOut = dist/index.html
minifyOpts = --minify
src = src
dist = dist
bin = bin
out = out
relative = .
tools = tools
goLinkFlags = -ldflags="-s -w"

rule nodeRun
    command = node $in $out

rule buildTemplate
    command = $bin/build.exe template $in $out

rule calcBundleSize
    command = $bin/build.exe calcBundleSize $in $out

rule esbuild
    command = node ./node_modules/esbuild/bin/esbuild $minifyOpts --bundle $in --outfile=$out

rule terser
    command = node ./node_modules/terser/bin/terser $in --compress --mangle -o $out

rule gobuilddir
    command = go build -o $bin/ $goLinkFlags $relative/$in

build $bin/build.exe: gobuilddir cmd/build

build $dist/index.css: esbuild $src/index.css

build $dist/index-esbuild.js: esbuild $src/index.js | $src/compile-guesses.ts $src/common.ts $src/filter-guesses.ts $src/common-dom.ts

build $dist/index.js: terser $dist/index-esbuild.js

build $dist/make-suggestion-nodes.cjs: esbuild $tools/make-suggestion-nodes.js | $src/common.ts $src/filter-guesses.ts $src/common-dom.ts $src/compile-guesses.ts
  minifyOpts = --platform=node

build $dist/suggestions.txt $dist/afterSuggestions.txt: nodeRun $dist/make-suggestion-nodes.cjs

build $dist/index.test.js: esbuild $src/index.test.ts | $src/compile-guesses.ts $src/common.ts $src/filter-guesses.ts
  minifyOpts = --platform=node

build $wordleOut $out/bundle-size.json: buildTemplate $src/template.html $dist/index.js $dist/index.css $dist/suggestions.txt $dist/afterSuggestions.txt | $bin/build.exe
